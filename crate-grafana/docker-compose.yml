version: '3'

services:

  orion:
    image: fiware/orion
    ports:
      - "1026:1026"
    command: -logLevel DEBUG -noCache -dbhost mongo
    depends_on:
      - mongo
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:1026/version"]
      interval: 1m
      timeout: 10s
      retries: 3

  mongo:
    image: mongo:3.6
    hostname: mongo
    container_name: db-mongo
    expose:
        - "27017"
    ports:
        - "27017:27017"
    networks:
        - default
    command: --bind_ip_all --smallfiles


  quantumleap:
    image: smartsdk/quantumleap
    ports:
      - "8668:8668"
    depends_on:
      - mongo
      - orion
      - crate-db
    environment:
      - CRATE_HOST=crate-db

  crate-db:
    image: crate
    hostname: crate-db
    container_name: db-crate
    expose:
      - "4200"
      - "4300"
    ports:
      # Admin UI
      - "4200:4200"
      # Transport protocol
      - "4300:4300"
    #command: -Ccluster.name=democluster -Chttp.cors.enabled=true -Chttp.cors.allow-origin="*"
    command: crate -Cauth.host_based.enabled=false  -Ccluster.name=democluster -Chttp.cors.enabled=true -Chttp.cors.allow-origin="*"
    volumes:
      - cratedata:/data

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-worldmap-panel
      - GF_PATHS_LOGS=/var/log/grafana
      - GF_LOG_MODE=console file
    depends_on:
      - crate-db
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
  
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./portainer-data:/data
    ports:
      - 9000:9000

volumes:
  mongodata:
  cratedata:
  redisdata:
  grafana_data: {}

networks:
  default:
    driver_opts:
        com.docker.network.driver.mtu: ${DOCKER_MTU:-1400}